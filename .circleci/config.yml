version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:2.6.5-node-browsers
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: root
      PGPASSWORD: ""
      RAILS_ENV: test
      NODE_ENV: test

jobs:
  test:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v
      # bundle cache
      - restore_cache:
          keys:
            - palpita-ai-bundle-v2-{{ checksum "Gemfile.lock" }}
            - palpita-ai-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      # Store bundle cache
      - save_cache:
          key: palpita-ai-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # Only necessary if app uses webpacker or yarn in some other way
      - run:
          name: webpacker
          command: bundle exec rake webpacker:compile
      - restore_cache:
          keys:
            - palpita-ai-yarn-{{ checksum "yarn.lock" }}
            - palpita-ai-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: palpita-ai-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            bundle exec rake db:create
            bundle exec rails db:schema:load --trace
      - run:
          command: |
            mkdir test/reports
            bundle exec rake test
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: test/reports
          destination: reports

workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
