version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: cimg/ruby:3.1.2-browsers
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: postgres
      PGPASSWORD: ""
      RAILS_ENV: test
      NODE_ENV: test
  postgres: &postgres
    image: cimg/postgres:12.11
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ""
      POSTGRES_DB: palpita_ai_test

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
      - *postgres
      - image: redis
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - palpita-ai-bundle-v2-{{ checksum "Gemfile.lock" }}
            - palpita-ai-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: palpita-ai-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - palpita-ai-yarn-{{ checksum "yarn.lock" }}
            - palpita-ai-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - run:
          name: webpacker
          command: bundle exec rake webpacker:compile
      - save_cache:
          key: palpita-ai-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            bundle exec rake db:create
            bundle exec rails db:schema:load --trace
      - run:
          name: Unit tests
          command: |
            mkdir test/reports
            bundle exec rake test
      - run:
          name: Integration tests
          command: |
            bundle exec rails test:system
      - run:
          command: |
            bundle exec rubocop
      - store_test_results:
          path: test/reports
      - store_artifacts:
          path: test/reports
          destination: reports
